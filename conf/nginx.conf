user  root;

error_log  logs/error.log;
pid        /var/run/nginx8888.pid;

worker_rlimit_core 10G;

worker_rlimit_nofile 2048;

worker_processes  8;
events {
    worker_connections  81200;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  combinedio  '$remote_addr - $remote_user [$time_local]'
                           ' "$request_method $scheme://$host$request_uri $server_protocol" "$status" $bytes_sent $request_time'
                           ' "$http_user_agent"';


    access_log  logs/access.log combinedio;

    server_names_hash_max_size          1024;
    server_names_hash_bucket_size       128;

    output_buffers      1 128k;
    sendfile            on;
    tcp_nopush          on;
    sendfile_max_chunk  128k;
    keepalive_timeout   8;
    server_tokens       off;
    client_max_body_size 10M;

    gzip                on;
    gzip_disable        "MSIE [1-6]\.";
    gzip_types          text/plain application/x-javascript text/css application/json
                        application/xml;

    lua_package_path    '/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/resty/?.lua;/usr/local/openresty/nginx/conf/lua/?.lua;/usr/local/openresty/lualib/resty/dns/?.lua;;';
    lua_package_cpath   '/usr/local/openresty/lualib/?.so;/usr/local/openresty/lualib/resty/?.so;;';

    rewrite_by_lua_no_postpone      off;

    lua_shared_dict shm_objects         10240m;
    
    init_by_lua_file                'conf/lua/init.lua';

    #limit_req_zone  $binary_remote_addr  zone=req_one:10m rate=100000r/s;

    server {
        listen      8888 default;
        proxy_http_version              1.1;
        location / {
        }
        
        location = /pcc {
            set $server "";
            set $uid_server "";
            content_by_lua_file         "conf/lua/content_by_lua_file.lua";
        }
        
        location = /status.html {
             content_by_lua_block {
                  ngx.say("ok")
                  ngx.exit(200)
             }
        }
   }
}
